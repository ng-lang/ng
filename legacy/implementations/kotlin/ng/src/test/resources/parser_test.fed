type List<t> = | cons Cons(t, List<t>) | cons Nil

type array_of_int = array<Int>

sig get :: t, n => array<t, n> -> Int -> Maybe<t>

sig length :: t => List<t> -> Int

sig fact :: Int -> Int

fun main = shit.get(3) |> print

fun lucky a = if a >= 0 then 1 else 2

fun fact x = if x = 0 then 1 else x * fact(x - 1)